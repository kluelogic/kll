# -*-Shell-script-*-
#
# my_led.kll
#

Name = my_led;
Version = 0.1;
Author = "Keisuke Shimizu";
KLL = 0.3d;

# Modified Date

Date = 2016-04-16;

# LED

# ISSILedMask2 => ISSILedMask2_define;
# ISSILedMask3 => ISSILedMask3_define;
# ISSILedMask4 => ISSILedMask4_define;
# ISSILedMask5 => ISSILedMask5_define;
# ISSILedMask6 => ISSILedMask6_define;
# ISSILedMask7 => ISSILedMask7_define;
# ISSILedMask8 => ISSILedMask8_define;

# ISSILedMask2 = "
# 	0xFF, 0x00, /* C1-1 -> C1-16 */
# 	0xFF, 0x00, /* C2-1 -> C2-16 */
# 	0xFF, 0x00, /* C3-1 -> C3-16 */
# 	0xFF, 0x00, /* C4-1 -> C4-16 */
# 	0x3F, 0x00, /* C5-1 -> C5-16 */
# 	0x00, 0x00, /* C6-1 -> C6-16 */
# 	0x00, 0x00, /* C7-1 -> C7-16 */
# 	0x00, 0x00, /* C8-1 -> C8-16 */
# 	0x00, 0x00, /* C9-1 -> C9-16 */
# ";
# ISSILedMask3 = "
# 	0xFF, 0x00, /* C1-1 -> C1-16 */
# 	0xFF, 0x00, /* C2-1 -> C2-16 */
# 	0xFF, 0x00, /* C3-1 -> C3-16 */
# 	0xFF, 0x00, /* C4-1 -> C4-16 */
# 	0x3F, 0x00, /* C5-1 -> C5-16 */
# 	0x00, 0x00, /* C6-1 -> C6-16 */
# 	0x00, 0x00, /* C7-1 -> C7-16 */
# 	0x00, 0x00, /* C8-1 -> C8-16 */
# 	0x00, 0x00, /* C9-1 -> C9-16 */
# ";
# ISSILedMask4 = "
# 	0xFF, 0x00, /* C1-1 -> C1-16 */
# 	0xFF, 0x00, /* C2-1 -> C2-16 */
# 	0xFF, 0x00, /* C3-1 -> C3-16 */
# 	0xFF, 0x00, /* C4-1 -> C4-16 */
# 	0x3F, 0x00, /* C5-1 -> C5-16 */
# 	0x00, 0x00, /* C6-1 -> C6-16 */
# 	0x00, 0x00, /* C7-1 -> C7-16 */
# 	0x00, 0x00, /* C8-1 -> C8-16 */
# 	0x00, 0x00, /* C9-1 -> C9-16 */
# ";
# ISSILedMask5 = "
# 	0xFF, 0x00, /* C1-1 -> C1-16 */
# 	0xFF, 0x00, /* C2-1 -> C2-16 */
# 	0xFF, 0x00, /* C3-1 -> C3-16 */
# 	0xFF, 0x00, /* C4-1 -> C4-16 */
# 	0x3F, 0x00, /* C5-1 -> C5-16 */
# 	0x00, 0x00, /* C6-1 -> C6-16 */
# 	0x00, 0x00, /* C7-1 -> C7-16 */
# 	0x00, 0x00, /* C8-1 -> C8-16 */
# 	0x00, 0x00, /* C9-1 -> C9-16 */
# ";
# ISSILedMask6 = "
# 	0xFF, 0x00, /* C1-1 -> C1-16 */
# 	0xFF, 0x00, /* C2-1 -> C2-16 */
# 	0xFF, 0x00, /* C3-1 -> C3-16 */
# 	0xFF, 0x00, /* C4-1 -> C4-16 */
# 	0x3F, 0x00, /* C5-1 -> C5-16 */
# 	0x00, 0x00, /* C6-1 -> C6-16 */
# 	0x00, 0x00, /* C7-1 -> C7-16 */
# 	0x00, 0x00, /* C8-1 -> C8-16 */
# 	0x00, 0x00, /* C9-1 -> C9-16 */
# ";
# ISSILedMask7 = "
# 	0xFF, 0x00, /* C1-1 -> C1-16 */
# 	0xFF, 0x00, /* C2-1 -> C2-16 */
# 	0xFF, 0x00, /* C3-1 -> C3-16 */
# 	0xFF, 0x00, /* C4-1 -> C4-16 */
# 	0x3F, 0x00, /* C5-1 -> C5-16 */
# 	0x00, 0x00, /* C6-1 -> C6-16 */
# 	0x00, 0x00, /* C7-1 -> C7-16 */
# 	0x00, 0x00, /* C8-1 -> C8-16 */
# 	0x00, 0x00, /* C9-1 -> C9-16 */
# ";
# ISSILedMask8 = "
# 	0xFF, 0x00, /* C1-1 -> C1-16 */
# 	0xFF, 0x00, /* C2-1 -> C2-16 */
# 	0xFF, 0x00, /* C3-1 -> C3-16 */
# 	0xFF, 0x00, /* C4-1 -> C4-16 */
# 	0x3F, 0x00, /* C5-1 -> C5-16 */
# 	0x00, 0x00, /* C6-1 -> C6-16 */
# 	0x00, 0x00, /* C7-1 -> C7-16 */
# 	0x00, 0x00, /* C8-1 -> C8-16 */
# 	0x00, 0x00, /* C9-1 -> C9-16 */
# ";

ISSILedBrightness2 => ISSILedBrightness2_define;
ISSILedBrightness3 => ISSILedBrightness3_define;
ISSILedBrightness4 => ISSILedBrightness4_define;
ISSILedBrightness5 => ISSILedBrightness5_define;
ISSILedBrightness6 => ISSILedBrightness6_define;
ISSILedBrightness7 => ISSILedBrightness7_define;
ISSILedBrightness8 => ISSILedBrightness8_define;

ISSILedBrightness1 = "
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C1-1 -> C1-16 */
0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C2-1 -> C2-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C3-1 -> C3-16 */
0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C4-1 -> C4-16 */
0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C5-1 -> C5-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C6-1 -> C6-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C7-1 -> C7-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C8-1 -> C8-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C9-1 -> C9-16 */
";
ISSILedBrightness2 = "
0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C1-1 -> C1-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C2-1 -> C2-16 */
0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C3-1 -> C3-16 */
0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C4-1 -> C4-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C5-1 -> C5-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C6-1 -> C6-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C7-1 -> C7-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C8-1 -> C8-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C9-1 -> C9-16 */
";
ISSILedBrightness3 = "
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C1-1 -> C1-16 */
0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C2-1 -> C2-16 */
0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C3-1 -> C3-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C4-1 -> C4-16 */
0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C5-1 -> C5-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C6-1 -> C6-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C7-1 -> C7-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C8-1 -> C8-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C9-1 -> C9-16 */
";
ISSILedBrightness4 = "
0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C1-1 -> C1-16 */
0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C2-1 -> C2-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C3-1 -> C3-16 */
0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C4-1 -> C4-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C5-1 -> C5-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C6-1 -> C6-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C7-1 -> C7-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C8-1 -> C8-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C9-1 -> C9-16 */
";
ISSILedBrightness5 = "
0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C1-1 -> C1-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C2-1 -> C2-16 */
0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C3-1 -> C3-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C4-1 -> C4-16 */
0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C5-1 -> C5-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C6-1 -> C6-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C7-1 -> C7-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C8-1 -> C8-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C9-1 -> C9-16 */
";
ISSILedBrightness6 = "
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C1-1 -> C1-16 */
0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C2-1 -> C2-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C3-1 -> C3-16 */
0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C4-1 -> C4-16 */
0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C5-1 -> C5-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C6-1 -> C6-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C7-1 -> C7-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C8-1 -> C8-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C9-1 -> C9-16 */
";
ISSILedBrightness7 = "
0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C1-1 -> C1-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C2-1 -> C2-16 */
0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C3-1 -> C3-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C4-1 -> C4-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C5-1 -> C5-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C6-1 -> C6-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C7-1 -> C7-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C8-1 -> C8-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C9-1 -> C9-16 */
";
ISSILedBrightness8 = "
0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C1-1 -> C1-16 */
0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C2-1 -> C2-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C3-1 -> C3-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C4-1 -> C4-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C5-1 -> C5-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C6-1 -> C6-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C7-1 -> C7-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C8-1 -> C8-16 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* C9-1 -> C9-16 */
";

myLedControl => my_LED_control_capability( mode : 1, amount : 1, index : 2 );

# Additional Actions (Left) - must be updated if key map has changed

U"Esc"       :+ myLedControl( 20, 0x0, 0x11 ); # MyLedControlMode_exec_key_func amount=n/a index=0x11
U"1"         :+ myLedControl( 20, 0x0, 0x01 ); # MyLedControlMode_exec_key_func amount=n/a index=0x01
U"2"         :+ myLedControl( 20, 0x0, 0x40 ); # MyLedControlMode_exec_key_func amount=n/a index=0x40
U"3"         :+ myLedControl( 20, 0x0, 0x30 ); # MyLedControlMode_exec_key_func amount=n/a index=0x30
U"4"         :+ myLedControl( 20, 0x0, 0x20 ); # MyLedControlMode_exec_key_func amount=n/a index=0x20
U"5"         :+ myLedControl( 20, 0x0, 0x10 ); # MyLedControlMode_exec_key_func amount=n/a index=0x10

U"Tab"       :+ myLedControl( 20, 0x0, 0x32 ); # MyLedControlMode_exec_key_func amount=n/a index=0x32
U"Q"         :+ myLedControl( 20, 0x0, 0x22 ); # MyLedControlMode_exec_key_func amount=n/a index=0x22
U"W"         :+ myLedControl( 20, 0x0, 0x12 ); # MyLedControlMode_exec_key_func amount=n/a index=0x12
U"E"         :+ myLedControl( 20, 0x0, 0x02 ); # MyLedControlMode_exec_key_func amount=n/a index=0x02
U"R"         :+ myLedControl( 20, 0x0, 0x41 ); # MyLedControlMode_exec_key_func amount=n/a index=0x41
U"T"         :+ myLedControl( 20, 0x0, 0x31 ); # MyLedControlMode_exec_key_func amount=n/a index=0x31

U"LCtrl"     :+ myLedControl( 20, 0x0, 0x43 ); # MyLedControlMode_exec_key_func amount=n/a index=0x43
U"A"         :+ myLedControl( 20, 0x0, 0x33 ); # MyLedControlMode_exec_key_func amount=n/a index=0x33
U"S"         :+ myLedControl( 20, 0x0, 0x23 ); # MyLedControlMode_exec_key_func amount=n/a index=0x23
U"D"         :+ myLedControl( 20, 0x0, 0x13 ); # MyLedControlMode_exec_key_func amount=n/a index=0x13
U"F"         :+ myLedControl( 20, 0x0, 0x03 ); # MyLedControlMode_exec_key_func amount=n/a index=0x03
U"G"         :+ myLedControl( 20, 0x0, 0x42 ); # MyLedControlMode_exec_key_func amount=n/a index=0x42

U"LShift"    :+ myLedControl( 20, 0x0, 0x35 ); # MyLedControlMode_exec_key_func amount=n/a index=0x35
U"Z"         :+ myLedControl( 20, 0x0, 0x25 ); # MyLedControlMode_exec_key_func amount=n/a index=0x25
U"X"         :+ myLedControl( 20, 0x0, 0x15 ); # MyLedControlMode_exec_key_func amount=n/a index=0x15
U"C"         :+ myLedControl( 20, 0x0, 0x05 ); # MyLedControlMode_exec_key_func amount=n/a index=0x05
U"V"         :+ myLedControl( 20, 0x0, 0x44 ); # MyLedControlMode_exec_key_func amount=n/a index=0x44
U"B"         :+ myLedControl( 20, 0x0, 0x34 ); # MyLedControlMode_exec_key_func amount=n/a index=0x34

#U"LGui"      :+ myLedControl( 20, 0x0, 0x37 ); # MyLedControlMode_exec_key_func amount=n/a index=0x37
#U"Backtick"  :+ myLedControl( 20, 0x0, 0x27 ); # MyLedControlMode_exec_key_func amount=n/a index=0x27
#U"Function3" :+ myLedControl( 20, 0x0, 0x17 ); # MyLedControlMode_exec_key_func amount=n/a index=0x17
#U"Function4" :+ myLedControl( 20, 0x0, 0x07 ); # MyLedControlMode_exec_key_func amount=n/a index=0x07
#U"Function5" :+ myLedControl( 20, 0x0, 0x36 ); # MyLedControlMode_exec_key_func amount=n/a index=0x36

#U"Esc"       :+ myLedControl( 20, 0x0, 0x00 ); # MyLedControlMode_exec_key_func amount=n/a index=0x26
#U"Function1" :+ myLedControl( 20, 0x0, 0x21 ); # MyLedControlMode_exec_key_func amount=n/a index=0x26
#U"Function2" :+ myLedControl( 20, 0x0, 0x24 ); # MyLedControlMode_exec_key_func amount=n/a index=0x26
#U"Backspace" :+ myLedControl( 20, 0x0, 0x26 ); # MyLedControlMode_exec_key_func amount=n/a index=0x26
#U"Left"      :+ myLedControl( 20, 0x0, 0x14 ); # MyLedControlMode_exec_key_func amount=n/a index=0x14
#U"Enter"     :+ myLedControl( 20, 0x0, 0x16 ); # MyLedControlMode_exec_key_func amount=n/a index=0x16
#U"Right"     :+ myLedControl( 20, 0x0, 0x04 ); # MyLedControlMode_exec_key_func amount=n/a index=0x04
#U"Up"        :+ myLedControl( 20, 0x0, 0x45 ); # MyLedControlMode_exec_key_func amount=n/a index=0x45
#U"Down"      :+ myLedControl( 20, 0x0, 0x06 ); # MyLedControlMode_exec_key_func amount=n/a index=0x06

# Additional Actions (Right) - must be updated if key map has changed

U"6"         :+ myLedControl( 20, 0x0, 0x10 ); # MyLedControlMode_exec_key_func amount=n/a index=0x10
U"7"         :+ myLedControl( 20, 0x0, 0x20 ); # MyLedControlMode_exec_key_func amount=n/a index=0x20
U"8"         :+ myLedControl( 20, 0x0, 0x30 ); # MyLedControlMode_exec_key_func amount=n/a index=0x30
U"9"         :+ myLedControl( 20, 0x0, 0x40 ); # MyLedControlMode_exec_key_func amount=n/a index=0x40
U"0"         :+ myLedControl( 20, 0x0, 0x01 ); # MyLedControlMode_exec_key_func amount=n/a index=0x01
U"Minus"     :+ myLedControl( 20, 0x0, 0x11 ); # MyLedControlMode_exec_key_func amount=n/a index=0x11

U"Y"         :+ myLedControl( 20, 0x0, 0x31 ); # MyLedControlMode_exec_key_func amount=n/a index=0x31
U"U"         :+ myLedControl( 20, 0x0, 0x41 ); # MyLedControlMode_exec_key_func amount=n/a index=0x41
U"I"         :+ myLedControl( 20, 0x0, 0x02 ); # MyLedControlMode_exec_key_func amount=n/a index=0x02
U"O"         :+ myLedControl( 20, 0x0, 0x12 ); # MyLedControlMode_exec_key_func amount=n/a index=0x12
U"P"         :+ myLedControl( 20, 0x0, 0x22 ); # MyLedControlMode_exec_key_func amount=n/a index=0x22
U"Backspace" :+ myLedControl( 20, 0x0, 0x32 ); # MyLedControlMode_exec_key_func amount=n/a index=0x32

U"H"         :+ myLedControl( 20, 0x0, 0x42 ); # MyLedControlMode_exec_key_func amount=n/a index=0x42
U"J"         :+ myLedControl( 20, 0x0, 0x03 ); # MyLedControlMode_exec_key_func amount=n/a index=0x03
U"K"         :+ myLedControl( 20, 0x0, 0x13 ); # MyLedControlMode_exec_key_func amount=n/a index=0x13
U"L"         :+ myLedControl( 20, 0x0, 0x23 ); # MyLedControlMode_exec_key_func amount=n/a index=0x23
U"Semicolon" :+ myLedControl( 20, 0x0, 0x33 ); # MyLedControlMode_exec_key_func amount=n/a index=0x33
U"Enter"     :+ myLedControl( 20, 0x0, 0x43 ); # MyLedControlMode_exec_key_func amount=n/a index=0x43

U"N"         :+ myLedControl( 20, 0x0, 0x34 ); # MyLedControlMode_exec_key_func amount=n/a index=0x34
U"M"         :+ myLedControl( 20, 0x0, 0x44 ); # MyLedControlMode_exec_key_func amount=n/a index=0x44
U"Comma"     :+ myLedControl( 20, 0x0, 0x05 ); # MyLedControlMode_exec_key_func amount=n/a index=0x05
U"Period"    :+ myLedControl( 20, 0x0, 0x15 ); # MyLedControlMode_exec_key_func amount=n/a index=0x15
U"Slash"     :+ myLedControl( 20, 0x0, 0x25 ); # MyLedControlMode_exec_key_func amount=n/a index=0x25
U"RShift"    :+ myLedControl( 20, 0x0, 0x35 ); # MyLedControlMode_exec_key_func amount=n/a index=0x35

U"Latch1"    :+ myLedControl( 20, 0x0, 0x36 ); # MyLedControlMode_exec_key_func amount=n/a index=0x36
U"Lock2"     :+ myLedControl( 20, 0x0, 0x07 ); # MyLedControlMode_exec_key_func amount=n/a index=0x07
#U"Up"        :+ myLedControl( 20, 0x0, 0x17 ); # MyLedControlMode_exec_key_func amount=n/a index=0x17
#U"Right"     :+ myLedControl( 20, 0x0, 0x27 ); # MyLedControlMode_exec_key_func amount=n/a index=0x27
#U"RGui"      :+ myLedControl( 20, 0x0, 0x37 ); # MyLedControlMode_exec_key_func amount=n/a index=0x37

#U"Function6" :+ myLedControl( 20, 0x0, 0x00 ); # MyLedControlMode_exec_key_func amount=n/a index=0x00
#U"LBracket"  :+ myLedControl( 20, 0x0, 0x21 ); # MyLedControlMode_exec_key_func amount=n/a index=0x21
#U"Function7" :+ myLedControl( 20, 0x0, 0x24 ); # MyLedControlMode_exec_key_func amount=n/a index=0x24
U"Space"     :+ myLedControl( 20, 0x0, 0x26 ); # MyLedControlMode_exec_key_func amount=n/a index=0x26
U"Right"     :+ myLedControl( 20, 0x0, 0x14 ); # MyLedControlMode_exec_key_func amount=n/a index=0x14
#U"Enter"     :+ myLedControl( 20, 0x0, 0x16 ); # MyLedControlMode_exec_key_func amount=n/a index=0x16
U"Left"      :+ myLedControl( 20, 0x0, 0x04 ); # MyLedControlMode_exec_key_func amount=n/a index=0x04
U"Up"        :+ myLedControl( 20, 0x0, 0x45 ); # MyLedControlMode_exec_key_func amount=n/a index=0x45
U"Down"      :+ myLedControl( 20, 0x0, 0x06 ); # MyLedControlMode_exec_key_func amount=n/a index=0x06
