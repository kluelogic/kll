# Animation Example Configuration

Name = Animation Example;
Version = 0.1;
Author = "HaaTa (Jacob Alexander) 2017";
KLL = 0.5;

# Modified Date
Date = 2017-01-22;


### Animations ###

# Pixel index 1 test
A[testanimation] <= stop; # initially stopped
A[testanimation, 1] <= P[1](30,70,120);
A[testanimation, 2] <= P[1](0,0,0);
A[testanimation, 3] <= P[1](60,90,140);

# Pixel clear test (scancodes)
A[clear_pixels] <= stop; # initially stopped
A[clear_pixels, 1] <=
	S[18](0,0,0),
	S[19](0,0,0),
	S[20](0,0,0),
	S[29](0,0,0),
	S[38](0,0,0);

# Rainbow, static interpolation test
A[rainbow_static_fill_interp] <= start, interp:on;
A[rainbow_static_fill_interp, 1] <=
	P[c:0%](0,255,0),
	P[c:25%](255,255,0),
	P[c:50%](255,0,0),
	P[c:75%](127,0,255),
	P[c:100%](0,0,255);
A[rainbow_static_fill_interp, 1] <=
	P[c:0%](255,255,255),
	P[c:100%](255,255,255);

# Full fill example
A[blue_fill_interp] <= interp:on;
A[blue_fill_interp, 1] <=
	P[c:0%](0x00,0xAE,0xDA),
	P[c:100%](0x00,0xAE,0xDA);

# Fade-in example
# TODO - Use frame interpolation when ready
A[z1_fade_in] <= start, interp:on;
A[z1_fade_in, 1] <= P[c:0%](0,0,0), P[c:100%](0,0,0);
A[z1_fade_in, 2] <= P[c:0%](5,5,5), P[c:100%](5,5,5);
A[z1_fade_in, 3] <= P[c:0%](10,10,10), P[c:100%](10,10,10);
A[z1_fade_in, 4] <= P[c:0%](20,20,20), P[c:100%](20,20,20);
A[z1_fade_in, 5] <= P[c:0%](40,40,40), P[c:100%](40,40,40);
A[z1_fade_in, 6] <= P[c:0%](60,60,60), P[c:100%](60,60,60);
A[z1_fade_in, 7] <= P[c:0%](80,80,80), P[c:100%](80,80,80);
A[z1_fade_in, 8] <= P[c:0%](100,100,100), P[c:100%](100,100,100);
A[z1_fade_in, 9] <= P[c:0%](130,130,130), P[c:100%](130,130,130);
A[z1_fade_in, 10] <= P[c:0%](160,160,160), P[c:100%](160,160,160);
A[z1_fade_in, 11] <= P[c:0%](190,190,190), P[c:100%](190,190,190);
A[z1_fade_in, 12] <= P[c:0%](220,220,220), P[c:100%](220,220,220);
A[z1_fade_in, 13] <= P[c:0%](255,255,255), P[c:100%](255,255,255);
A[z1_fade_in, 14] <= P[c:0%](200,200,200), P[c:100%](200,200,200);
A[z1_fade_in, 15] <= P[c:0%](200,200,200), P[c:100%](200,200,200);
A[z1_fade_in, 16] <= P[c:0%](200,200,200), P[c:100%](200,200,200);
A[z1_fade_in, 17] <= P[c:0%](150,150,150), P[c:100%](150,150,150);
A[z1_fade_in, 18] <= P[c:0%](150,150,150), P[c:100%](150,150,150);
A[z1_fade_in, 19] <= P[c:0%](100,100,100), P[c:100%](100,100,100);
A[z1_fade_in, 20] <= P[c:0%](100,100,100), P[c:100%](100,100,100);
A[z1_fade_in, 21] <= P[c:0%](100,100,100), P[c:100%](100,100,100);
A[z1_fade_in, 22] <= P[c:0%](0,100,0), P[c:25%](100,100,0), P[c:50%](100,0,0), P[c:75%](75,0,100), P[c:100%](0,0,100);
A[z1_fade_in, 23] <= P[c:0%](0,200,0), P[c:25%](200,200,0), P[c:50%](200,0,0), P[c:75%](120,0,200), P[c:100%](0,0,200);
A[z1_fade_in, 24] <= P[c:0%](0,255,0), P[c:25%](255,255,0), P[c:50%](255,0,0), P[c:75%](127,0,255), P[c:100%](0,0,255);

# Rainbow Animation example
A[z2_rainbow_fill_interp] <= interp:on;
A[z2_rainbow_fill_interp, 1] <= P[c:0%](0,255,0), P[c:25%](255,255,0), P[c:50%](255,0,0), P[c:75%](127,0,255), P[c:100%](0,0,255);
#A[z2_rainbow_fill_interp, 1] <= P[c:0%](0,255,0), P[c:25%](255,255,0), P[c:50%](255,0,0), P[c:75%](127,0,255);
A[z2_rainbow_fill_interp, 2] <= P[c:0%](0,255,0), P[c:27%](255,255,0), P[c:52%](255,0,0), P[c:77%](127,0,255), P[c:100%](0,0,255);
#A[z2_rainbow_fill_interp, 2] <= P[c:0%](0,255,0), P[c:27%](255,255,0), P[c:52%](255,0,0), P[c:77%](127,0,255);
A[z2_rainbow_fill_interp, 3] <= P[c:0%](0,255,0), P[c:29%](255,255,0), P[c:54%](255,0,0), P[c:79%](127,0,255), P[c:100%](0,0,255);
#A[z2_rainbow_fill_interp, 3] <= P[c:0%](0,255,0), P[c:29%](255,255,0), P[c:54%](255,0,0), P[c:79%](127,0,255);
A[z2_rainbow_fill_interp, 4] <= P[c:0%](0,255,0), P[c:31%](255,255,0), P[c:56%](255,0,0), P[c:81%](127,0,255), P[c:100%](0,0,255);
#A[z2_rainbow_fill_interp, 4] <= P[c:0%](0,255,0), P[c:31%](255,255,0), P[c:56%](255,0,0), P[c:81%](127,0,255);
#A[z2_rainbow_fill_interp, 4] <= P[c:56%](255,0,0), P[c:81%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 5] <= P[c:0%](0,255,0), P[c:33%](255,255,0), P[c:58%](255,0,0), P[c:83%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 6] <= P[c:0%](0,255,0), P[c:35%](255,255,0), P[c:60%](255,0,0), P[c:85%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 7] <= P[c:0%](0,255,0), P[c:37%](255,255,0), P[c:62%](255,0,0), P[c:87%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 8] <= P[c:0%](0,255,0), P[c:39%](255,255,0), P[c:64%](255,0,0), P[c:89%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 9] <= P[c:0%](0,255,0), P[c:41%](255,255,0), P[c:66%](255,0,0), P[c:91%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 10] <= P[c:0%](0,255,0), P[c:43%](255,255,0), P[c:68%](255,0,0), P[c:93%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 11] <= P[c:0%](0,255,0), P[c:45%](255,255,0), P[c:70%](255,0,0), P[c:95%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 12] <= P[c:0%](0,255,0), P[c:47%](255,255,0), P[c:72%](255,0,0), P[c:97%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 13] <= P[c:0%](0,255,0), P[c:45%](255,255,0), P[c:70%](255,0,0), P[c:95%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 14] <= P[c:0%](0,255,0), P[c:43%](255,255,0), P[c:68%](255,0,0), P[c:93%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 15] <= P[c:0%](0,255,0), P[c:41%](255,255,0), P[c:66%](255,0,0), P[c:91%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 16] <= P[c:0%](0,255,0), P[c:39%](255,255,0), P[c:64%](255,0,0), P[c:89%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 17] <= P[c:0%](0,255,0), P[c:37%](255,255,0), P[c:62%](255,0,0), P[c:87%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 18] <= P[c:0%](0,255,0), P[c:35%](255,255,0), P[c:60%](255,0,0), P[c:85%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 19] <= P[c:0%](0,255,0), P[c:33%](255,255,0), P[c:58%](255,0,0), P[c:83%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 20] <= P[c:0%](0,255,0), P[c:31%](255,255,0), P[c:56%](255,0,0), P[c:81%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 21] <= P[c:0%](0,255,0), P[c:29%](255,255,0), P[c:54%](255,0,0), P[c:79%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 22] <= P[c:0%](0,255,0), P[c:27%](255,255,0), P[c:52%](255,0,0), P[c:77%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 23] <= P[c:0%](0,255,0), P[c:25%](255,255,0), P[c:50%](255,0,0), P[c:75%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 24] <= P[c:0%](0,255,0), P[c:23%](255,255,0), P[c:47%](255,0,0), P[c:73%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 25] <= P[c:0%](0,255,0), P[c:21%](255,255,0), P[c:44%](255,0,0), P[c:71%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 26] <= P[c:0%](0,255,0), P[c:19%](255,255,0), P[c:41%](255,0,0), P[c:69%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 27] <= P[c:0%](0,255,0), P[c:17%](255,255,0), P[c:38%](255,0,0), P[c:67%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 28] <= P[c:0%](0,255,0), P[c:15%](255,255,0), P[c:35%](255,0,0), P[c:65%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 29] <= P[c:0%](0,255,0), P[c:13%](255,255,0), P[c:33%](255,0,0), P[c:63%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 30] <= P[c:0%](0,255,0), P[c:11%](255,255,0), P[c:30%](255,0,0), P[c:61%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 31] <= P[c:0%](0,255,0), P[c:9%](255,255,0), P[c:27%](255,0,0), P[c:59%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 32] <= P[c:0%](0,255,0), P[c:7%](255,255,0), P[c:24%](255,0,0), P[c:57%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 33] <= P[c:0%](0,255,0), P[c:5%](255,255,0), P[c:21%](255,0,0), P[c:55%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 34] <= P[c:0%](0,255,0), P[c:3%](255,255,0), P[c:18%](255,0,0), P[c:53%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 35] <= P[c:0%](0,255,0), P[c:3%](255,255,0), P[c:18%](255,0,0), P[c:53%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 36] <= P[c:0%](0,255,0), P[c:3%](255,255,0), P[c:18%](255,0,0), P[c:53%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 37] <= P[c:0%](0,255,0), P[c:10%](255,255,0), P[c:20%](255,0,0), P[c:60%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 38] <= P[c:0%](0,255,0), P[c:20%](255,255,0), P[c:40%](255,0,0), P[c:70%](127,0,255), P[c:100%](0,0,255);
A[z2_rainbow_fill_interp, 39] <= P[c:0%](0,255,0), P[c:25%](255,255,0), P[c:50%](255,0,0), P[c:75%](127,0,255), P[c:100%](0,0,255);
#A[z2_rainbow_fill_interp, 40] <= P[c:0%](100,100,100), P[c:100%](100,100,100);

# Rainbow Top Row
A[z3_rainbow_static_fill_interp_top_row] <= interp:on;
A[z3_rainbow_static_fill_interp_top_row, 1] <= P[c:0%,r:1](0,255,0), P[c:25%,r:1](255,255,0), P[c:50%,r:1](255,0,0), P[c:75%,r:1](127,0,255), P[c:100%,r:1](0,0,255);

# Fade-out example
# TODO - Use frame interpolation when ready
A[z4_fade_out] <= interp:on;
A[z4_fade_out, 16] <= P[c:0%](0,0,0), P[c:100%](0,0,0);
A[z4_fade_out, 15] <= P[c:0%](5,5,5), P[c:100%](5,5,5);
A[z4_fade_out, 14] <= P[c:0%](10,10,10), P[c:100%](10,10,10);
A[z4_fade_out, 13] <= P[c:0%](20,20,20), P[c:100%](20,20,20);
A[z4_fade_out, 12] <= P[c:0%](40,40,40), P[c:100%](40,40,40);
A[z4_fade_out, 11] <= P[c:0%](60,60,60), P[c:100%](60,60,60);
A[z4_fade_out, 10] <= P[c:0%](80,80,80), P[c:100%](80,80,80);
A[z4_fade_out, 9] <= P[c:0%](100,100,100), P[c:100%](100,100,100);
A[z4_fade_out, 8] <= P[c:0%](130,130,130), P[c:100%](130,130,130);
A[z4_fade_out, 7] <= P[c:0%](160,160,160), P[c:100%](160,160,160);
A[z4_fade_out, 6] <= P[c:0%](190,190,190), P[c:100%](190,190,190);
A[z4_fade_out, 5] <= P[c:0%](220,220,220), P[c:100%](220,220,220);
A[z4_fade_out, 4] <= P[c:0%](255,255,255), P[c:100%](255,255,255);
A[z4_fade_out, 3] <= P[c:0%](200,200,200), P[c:100%](200,200,200);
A[z4_fade_out, 2] <= P[c:0%](150,150,150), P[c:100%](150,150,150);
A[z4_fade_out, 1] <= P[c:0%](100,100,100), P[c:100%](100,100,100);

U"Esc" :+ animation(8, 2, 0, 1, 1); # Index, loops, pfunc, divmask, divshift
U"B" :+ animation(8, 2, 0, 1, 1);
U"F4" :+ animation(8, 2, 0, 1, 1);
U"F6" :+ animation(8, 2, 0, 1, 1);

U["A"-"Z"] :+ animation(5, 1, 1, 0, 0);

# Relative animation test
A[z5_relative_add] <= start;
A[z5_relative_add, 1] <= P[r:i](+10,+10,+10), P[c:i](+10,+10,+10), P[r:i,c:i](-10,-10,-10);
A[z5_relative_add, 2] <= P[r:i](+10,+10,+10), P[c:i](+10,+10,+10), P[r:i,c:i](-10,-10,-10);
A[z5_relative_add, 3] <= P[r:i](+10,+10,+10), P[c:i](+10,+10,+10), P[r:i,c:i](-10,-10,-10);
A[z5_relative_add, 4] <= P[r:i](+10,+10,+10), P[c:i](+10,+10,+10), P[r:i,c:i](-10,-10,-10);
A[z5_relative_add, 5] <= P[r:i](+10,+10,+10), P[c:i](+10,+10,+10), P[r:i,c:i](-10,-10,-10);
A[z5_relative_add, 6] <= P[r:i](+10,+10,+10), P[c:i](+10,+10,+10), P[r:i,c:i](-10,-10,-10);
A[z5_relative_add, 7] <= P[r:i](+10,+10,+10), P[c:i](+10,+10,+10), P[r:i,c:i](-10,-10,-10);
A[z5_relative_add, 8] <= P[r:i](+10,+10,+10), P[c:i](+10,+10,+10), P[r:i,c:i](-10,-10,-10);
A[z5_relative_add, 9] <= P[r:i](+10,+10,+10), P[c:i](+10,+10,+10), P[r:i,c:i](-10,-10,-10);
A[z5_relative_add, 10] <= P[r:i](+10,+10,+10), P[c:i](+10,+10,+10), P[r:i,c:i](-10,-10,-10);
A[z5_relative_add, 11] <= P[r:i](-10,-10,-10), P[c:i](-10,-10,-10), P[r:i,c:i](+10,+10,+10);
A[z5_relative_add, 12] <= P[r:i](-10,-10,-10), P[c:i](-10,-10,-10), P[r:i,c:i](+10,+10,+10);
A[z5_relative_add, 13] <= P[r:i](-10,-10,-10), P[c:i](-10,-10,-10), P[r:i,c:i](+10,+10,+10);
A[z5_relative_add, 14] <= P[r:i](-10,-10,-10), P[c:i](-10,-10,-10), P[r:i,c:i](+10,+10,+10);
A[z5_relative_add, 15] <= P[r:i](-10,-10,-10), P[c:i](-10,-10,-10), P[r:i,c:i](+10,+10,+10);
A[z5_relative_add, 16] <= P[r:i](-10,-10,-10), P[c:i](-10,-10,-10), P[r:i,c:i](+10,+10,+10);
A[z5_relative_add, 17] <= P[r:i](-10,-10,-10), P[c:i](-10,-10,-10), P[r:i,c:i](+10,+10,+10);
A[z5_relative_add, 18] <= P[r:i](-10,-10,-10), P[c:i](-10,-10,-10), P[r:i,c:i](+10,+10,+10);
A[z5_relative_add, 19] <= P[r:i](-10,-10,-10), P[c:i](-10,-10,-10), P[r:i,c:i](+10,+10,+10);
A[z5_relative_add, 20] <= P[r:i](-10,-10,-10), P[c:i](-10,-10,-10), P[r:i,c:i](+10,+10,+10);
#A[z5_relative_add, 2] <= P[c:i](+100,+100,+100);
#A[z5_relative_add, 3] <= P[r:i,c:i](+100,+100,+100);

